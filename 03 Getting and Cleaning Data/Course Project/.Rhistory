directory <- "C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata"
threshold <- 5000
## number of files in directory
num_files <- list.files(directory)
## initalize datatframe
data <- vector(mode = "numeric", length=0)
## loop through the files
for (i in 1:length(num_files)) {
file_i <- paste(directory, num_files[i], sep = '/')
data_i <- read.csv(file_i)
complete <- sum(complete.cases(data_i))
data_i <- data_i[complete.cases((data_i)),]
if (complete > threshold) {
coor <- cor(data_i$sulfate, data_i$nitrate)
data <- rbind(data, coor)
}
}
directory <- "C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata"
threshold <- 5000
## number of files in directory
num_files <- list.files(directory)
## initalize datatframe
data <- vector(mode = "numeric", length=0)
## loop through the files
for (i in 1:length(num_files)) {
file_i <- paste(directory, num_files[i], sep = '/')
data_i <- read.csv(file_i)
complete <- sum(complete.cases(data_i))
data_i <- data_i[complete.cases((data_i)),]
if (complete > threshold) {
coor <- cor(data_i$sulfate, data_i$nitrate)
data <- rbind(data, coor)
}
}
data
source('C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/scripts/corr.R')
cr <- coor("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", 5000)
head(cr)
summary(cr)
length(cr)
cr <- coor("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", 150)
head(cr)
source('C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/scripts/corr.R')
cr <- coor("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", 150)
summary(cr)
head(cr)
cr <- coor("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", 400)
head(cr)
summary(cr)
cr <- coor("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", 5000)
summary(cr)
length(cr)
source('C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/scripts/pollutantmean.R')
source('C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/scripts/complete.R')
source('C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/scripts/corr.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", "sulfate", 1:10)
pollutantmean("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", "nitrate", 70:72)
pollutantmean("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", "sulfate", 34)
pollutantmean("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", "nitrate")
cc <- complete("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc
cc <- complete("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", 54)
cc
set.seed(42)
cc <- complete("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", 332:1)
use <- sample(332, 10)
print(cc[use, 2])
cr <- corr("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- coor("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- coor("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- coor("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
cr <- coor("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", 2000)
n <- length(cr)
cr <- coor("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
cr <- coor("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", 2000)
n <- length(cr)
cr <- coor("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flags[,11:17]
flag_colors <- flags[,11:17]
head_flag_colors
head(flag_colors)
sapply(flag_colors, sum)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat<-sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lappy(unique_vals, length)
lapply(unique_vals, length)
sapply(unique_vals, length)
spply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate
table(flags$animate)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
head(iris)
mean(iris$Sepal.Length)
colmeans(iris)
colMeans(iris)
?apply
apply(iris[,1:4], 2, mean)
?tapply
with(mtcars, tapply(mpg, cylmean))
with(mtcars, tapply(mpg, cyl,mean))
sapply(split(ntcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
hp <- sapply(split(mtcars$hp, mtcars$cyl), mean)
hp
class(hp)
hp[1]
hp[1]-hp3
hp[1]-hp[3]
debug(ls)
ls()
quit()
exit()
set.seed(1)
rpois(5, 2)
?dpois
?cpois
?qpois
swirl()
library(swirl)
swirl()
ls(plants)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1), prob = c(.3, .7))
sample(c(0,1), 100, prob = c(.3, .7))
sample(c(0,1), 100, prob = c(.3, .7), replace = TRUE)
sample(c(0,1), 100, prob = c(0.3, 0.7), replace = TRUE)
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5)
rpois(5, lambde = 10)
rpois(5, lambda = 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm<-colmeans(my_pois)
cm<-colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=speed, y = dist)
plot(data = cars, x=speed, y = dist)
plot(x=cars$speed, y = cars$dist)
plot(x=cars$dist, y = cars$speed)
?plot
plot(x=cars$dist, y = cars$speed, xlab = "Speed")
plot(x=cars$dist, y = cars$speed, xlab = "Speed")
plot(x=cars$speed, y = cars$dist, xlab = "Speed")
plot(x=cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x=cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x=cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x=cars$speed, y = cars$dist, main = "My Plot"
)
plot(x=cars$speed, y = cars$dist, main = "My Plot")
plot(x=cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", title = "My Plot Subtitle")
plot(cars, main = "My Plot", sub = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
mtcars
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl)
boxplot(mtcars, formula = mpg ~ cyl)
boxplot(mtcars, mpg ~ cyl)
boxplot(data = mtcars, formula = mpg ~ cyl)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
exit()
library(data.table)
?fread
## load in the data
my_data <- fread("C:\Users\castnerj\Desktop\Coursera\datasciencecoursera\data\IdahoHousing.csv",
sep = ",",
nrows = 100)
## load in the data
my_data <- fread("C:\Users\castnerj\Desktop\Coursera\datasciencecoursera\data\IdahoHousing.csv",
sep = ",",
nrows = 100)
my_data <- fread("C:\Users\castnerj\Desktop\Coursera\datasciencecoursera\data\IdahoHousing.csv",
sep = ",",
nrows = 100)
y_data <- fread("C:\Users\castnerj\Desktop\Coursera\datasciencecoursera\data\IdahoHousing.csv",
sep = ",",
nrows = 100)
my_data <- fread("C:\Users\castnerj\Desktop\Coursera\datasciencecoursera\data\IdahoHousing.csv",
sep = ',',
nrows = 100)
my_data <- fread("C:\Users\castnerj\Desktop\Coursera\datasciencecoursera\data\IdahoHousing.csv",
sep = ',',
nrows = 100)
my_data <- fread("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/IdahoHousing.csv",
sep = ',',
nrows = 100)
View(my_data)
my_data <- fread("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/IdahoHousing.csv",
sep = ',',
header = TRUE,
nrows = 100,
colClasses = "character")
my_data <- fread("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/IdahoHousing.csv",
sep = ',',
header = TRUE,
colClasses = "character")
class(my_data)
dim(my_data)
str(my_data)
names(my_data)
View(my_data)
my_data[[Val == 24]]
my_data[[Val == 24]]
tables()
my_data[Val == 24,]
my_data[VAL == 24,]
nrow(my_data[VAL == 24,])
## load in the data
my_data <- fread("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/data/Clean Data/Natural_Gas.csv",
sep = ',',
header = TRUE,
colClasses = "character")
install.packages("xlsx")
library(xlsx)
install.packages("XML")
library(XML)
?xmlTreeParse
url  <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
page <- xmlTreeParse(url, useInternal = FALSE)
url  <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
page <- xmlTreeParse(url)
url  <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
page <- xmlTreeParse(url)
url  <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
page <- xmlTreeParse(url)
View(page)
rootnode <- xmlRoot(page)
rootnode[[1]]
rootnode[[1][1]]
rootnode[[1]][[1]]
?xmlValue
library(swirl)
swril()
swirl()
Sys.getlocale()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
month(this_day)
wday_this_day
wday(this_day)
wday(this_day, label = TRUE)
now()
this <- now()
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
exit()
exit
setwd("C:/Users/castnerj/Desktop/Coursera/datasciencecoursera/03 Getting and Cleaning Data/Course Project")
library(tidyverse)
test <- read_file("UCI HAR Dataset\test\subject_test.txt")
test <- read_file(file = "UCI HAR Dataset\test\subject_test.txt")
test <- read_file("UCI HAR Dataset/test/subject_test.txt")
?readLines
con <- file("UCI HAR Dataset/test/subject_test.txt", encoding = "UCS-2LE")
test <- readLines(con)
con <- file("UCI HAR Dataset/test/subject_test.txt", encoding = "UCS-2LE")
test <- readLines(con)
test <- read.table("UCI HAR Dataset/test/subject_test.txt")
View(test)
test <- read.table("UCI HAR Dataset/test/subject_test.txt", sep = "")
View(test)
test_x <- read.table("UCI HAR Dataset/test/X_test.txt")
View(test_x)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
View(activity_labels)
features <- read.table("UCI HAR Dataset/features.txt")
View(features)
body_acc_x_test <- read.table("UCI HAR Dataset/test/body_acc_x_test.txt")
body_acc_x_test <- read.table("UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt")
View(body_acc_x_test)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
View(activity_labels)
features <- read.table("UCI HAR Dataset/features.txt")
View(features)
test_subject <- read.table("UCI HAR Dataset/test/subject_test.txt")
unique(test_subject)
length(unique(test_subject))
length(unique(test_subject$V1))
unique(test_subject$V1)
train_subject <- read.table("UCI HAR Dataset/train/subject_train.txt")
unique(train_subject$V1)
length(unique(test_subject$V1))
length(unique(train_subject$V1))
remove(train_subject)
test_x <- read.table("UCI HAR Dataset/test/X_test.txt")
test_y <- read.table("UCI HAR Dataset/test/Y_test.txt")
View(test_y)
View(test_y)
View(head(test_x))
View(features)
features
View(features)
colnames(test_x)
colnames(test_x) <- features$V2
View(features)
test_y <- left_join(test_y, activity_labels, by = c("V1" = "V1"))
View(test_y)
test_y <- read.table("UCI HAR Dataset/test/Y_test.txt")
temp <- left_join(test_y, activity_labels, by = c("V1" = "V1"))
View(test_y)
View(temp)
remove(temp)
test_y <- left_join(test_y, activity_labels, by = c("V1" = "V1"))
test_xy <- rbind(test_y, test_x)
test_xy <- as.dataframe(rbind(as.matrix(test_y), as.matrix(test_x)))
test_xy <- as.data.frame(rbind(as.matrix(test_y), as.matrix(test_x)))
test_xy <- as.data.frame(rbind(as.matrix(test_y), as.matrix(test_x)))
test_xy <- cbind(test_y, test_x)
View(test_xy)
colnames(test_y) <- c("ActivityId", "Activity")
View(test_y)
colnames(test_y) <- c("Activity_Id", "Activity")
View(test_subject)
test_xy <- cbind(test_y, test_x)
colnames(activity_labels) <- c("Activity_Id", "Activity")
colnames(activity_labels) <- c("ActivityId", "ActivityName")
colnames(features) <- c("FeatrueId", "FeatureName")
View(features)
colnames(test_subject) <- c("SubjectId")
### import activity and feature datasets and create column names
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
features <- read.table("UCI HAR Dataset/features.txt")
colnames(activity_labels) <- c("ActivityId", "ActivityName")
colnames(features) <- c("FeatrueId", "FeatureName")
### import test subjects and create column names
test_subject <- read.table("UCI HAR Dataset/test/subject_test.txt")
colnames(test_subject) <- c("SubjectId")
test_body_acc_x <- read.table("UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt")
remove(test_body_acc_x)
test_x <- read.table("UCI HAR Dataset/test/X_test.txt")
test_y <- read.table("UCI HAR Dataset/test/Y_test.txt")
View(test_y)
colnames(test_x) <- features$FeatureName
colnames(test_y) <- c("ActivityId")
### join the activity name to the label dataset
test_y <- left_join(test_y, activity_labels, by = "ActivityId")
### append the datasets together
test <- cbind(test_subject, test_y, test_x)
View(test)
### append the test datasets together
test <- cbind(test_subject, test_y, test_x) %>%
select(contains("std"))
### append the test datasets together
test <- cbind(test_subject, test_y, test_x) %>%
select(contains(SubjectId, ActivityName, contains("std"), contains(mean))
### append the test datasets together
### append the test datasets together
test <- cbind(test_subject, test_y, test_x) %>%
select(contains(SubjectId, ActivityName, contains("std"), contains("mean"))
### append the test datasets together
test <- cbind(test_subject, test_y, test_x) %>%
select(SubjectId, ActivityName, contains("std"), contains("mean"))
### append the test datasets together
test <- cbind(test_subject, test_y, test_x) %>%
select("SubjectId", "ActivityName", contains("std"), contains("mean"))
### append the test datasets together
test <- cbind(test_subject, test_y, test_x) %>%
select(test, "SubjectId", "ActivityName", contains("std"), contains("mean"))
### append the test datasets together
test <- cbind(test_subject, test_y, test_x)
test <- select(test, "SubjectId", "ActivityName", contains("std"), contains("mean"))
class(test)
View(features)
length(features$FeatureName)
length(unique(features$FeatureName))
colnames(features) <- c("FeatureId", "FeatureName")
features <- features %>%
mutate(FeatureName2 = paste(FeatureName, FeatureId, sep = ""))
View(features)
features <- features %>%
mutate(FeatureName2 = paste("V", FeatureId, FeatureName, sep = ""))
View(features)
length(unique(features$FeatureName2))
colnames(test_x) <- features$FeatureName2
### append the test datasets together
test <- cbind(test_subject, test_y, test_x)
test <- select(test, "SubjectId", "ActivityName", contains("std"), contains("mean"))
View(test)
### append the test datasets together
test <- cbind(test_subject, test_y, test_x) %>%
select(test, "SubjectId", "ActivityName", contains("std"), contains("mean"))
### append the test datasets together
test <- cbind(test_subject, test_y, test_x) %>%
select("SubjectId", "ActivityName", contains("std"), contains("mean"))
test_summary <- test %>%
group_by(SubjectId, ActivityName) %>%
summarise_all(funs(mean))
View(test_summary)
